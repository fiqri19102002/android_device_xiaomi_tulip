<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) 2012-2016, The Linux Foundation. All rights reserved

    Not a Contribution.

    Licensed under the Apache License, Version 2.0 (the "License"); you
    may not use this file except in compliance with the License.  You may
    obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied.  See the License for the specific language governing
    permissions and limitations under the License.
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
    </string-array>

    <!-- Dhcp range (min, max) to use for tethering purposes -->
    <!-- USB is  192.168.42.1 and 255.255.255.0
         Wifi is 192.168.43.1 and 255.255.255.0
         BT is limited to max default of 5 connections. 192.168.44.1 to 192.168.48.1
         with 255.255.255.0
         P2P is 192.168.49.1 and 255.255.255.0
         Wigig is 192.168.50.1 and 255.255.255.0
         Wigig P2P is 192.168.51.1 and 255.255.255.0
    -->
    <string-array translatable="false" name="config_tether_dhcp_range">
        <item>192.168.42.2</item>
        <item>192.168.42.254</item>
        <item>192.168.43.2</item>
        <item>192.168.43.254</item>
        <item>192.168.44.2</item>
        <item>192.168.44.254</item>
        <item>192.168.45.2</item>
        <item>192.168.45.254</item>
        <item>192.168.46.2</item>
        <item>192.168.46.254</item>
        <item>192.168.47.2</item>
        <item>192.168.47.254</item>
        <item>192.168.48.2</item>
        <item>192.168.48.254</item>
        <item>192.168.49.2</item>
        <item>192.168.49.254</item>
        <item>192.168.50.2</item>
        <item>192.168.50.254</item>
        <item>192.168.51.2</item>
        <item>192.168.51.254</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,4,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_dun,4,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_fota,10,0,2,60000,true"</item>
        <item>"mobile_ims,11,0,2,60000,true"</item>
        <item>"mobile_cbs,12,0,2,60000,true"</item>
        <item>"bluetooth,7,7,2,-1,true"</item>
        <item>"mobile_emergency,15,0,5,-1,true"</item>
        <item>"ethernet,9,9,9,-1,true"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
            <item>"bnep\\d"</item>
            <item>"bt-pan"</item>
    </string-array>

    <!-- Boolean indicating if current platform supports BLE peripheral mode -->
    <bool name="config_bluetooth_le_peripheral_mode_supported">true</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating whether the wifi chipset has background scan support -->
    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

   <!-- Enable ACS (auto channel selection) for Wifi hotspot (SAP) -->
   <bool translatable="false" name="config_wifi_softap_acs_supported">true</bool>

   <!-- Enable 802.11ac for Wifi hotspot (SAP) -->
   <bool translatable="false" name="config_wifi_softap_ieee80211ac_supported">true</bool>

    <!-- If this is true, the screen will come on when you plug/unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- Is the device capable of hot swapping an ICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.

         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.

         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool name="config_wifiDisplaySupportsProtectedBuffers">true</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Wifi driver supports batched scan -->
    <bool translatable="false" name="config_wifi_batched_scan_supported">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays
    <integer-array name="config_autoBrightnessLevels">
        <item>10</item>
        <item>30</item>
        <item>60</item>
        <item>100</item>
        <item>150</item>
        <item>210</item>
        <item>255</item>
    </integer-array> -->

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>10</item>
        <item>20</item>
        <item>40</item>
        <item>70</item>
        <item>110</item>
        <item>160</item>
        <item>200</item>
        <item>255</item>
    </integer-array> -->

    <!-- MMS user agent string -->
    <string name="config_mms_user_agent" translatable="false">Android-Mms/2.0</string>

    <!-- MMS user agent prolfile url -->
    <string name="config_mms_user_agent_profile_url" translatable="false"
            >http://www.google.com/oha/rdf/ua-profile-kila.xml</string>

    <!-- Configuration to restart radio upon PDP_DEACTIVATE with
         error cause as Regular deactivation(36). -->
    <!--
    <bool name="config_radio_reset_on_regular_deactivation">false</bool>
    -->
    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
    <bool name="config_speed_up_audio_on_mt_calls">true</bool>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/arm64/boot-framework.oat"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/framework/arm64/boot.oat"</item>
        <item>"/system/framework/arm64/boot-core-libart.oat"</item>
        <item>"/apex/com.android.runtime/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.runtime/javalib/core-libart.jar"</item>
        <item>"/apex/com.android.media/javalib/updatable-media.jar"</item>
        <item>"/product/priv-app/SystemUI/SystemUI.apk"</item>
        <item>"/product/priv-app/SystemUI/oat/arm64/SystemUI.odex"</item>
        <item>"/system/lib64/libsurfaceflinger.so"</item>
    </string-array>

    <!-- List of files pinned by the Pinner Service with the apex boot image -->
    <string-array translatable="false" name="config_apexBootImagePinnerServiceFiles">
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/framework/arm64/apex.oat"</item>
        <item>"/system/framework/arm64/apex-core-libart.oat"</item>
        <item>"/apex/com.android.runtime/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.runtime/javalib/core-libart.jar"</item>
        <item>"/apex/com.android.media/javalib/updatable-media.jar"</item>
    </string-array>

    <!-- True if camera app should be pinned via Pinner Service -->
    <bool name="config_pinnerCameraApp">true</bool>

    <!-- Should the pinner service pin the Home application? -->
    <bool name="config_pinnerHomeApp">true</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- If true, the screen can be rotated via the accelerometer in all 4
         rotations as the default behavior. -->
    <bool name="config_allowAllRotations">true</bool>

    <!-- Whether camera shutter sound is forced or not  (country specific). -->
    <bool name="config_camera_sound_forced">false</bool>

    <!-- Configuration to enable non-default PDP during IWLAN
    <bool name="config_feature_iwlan_enabled">true</bool> -->

    <!-- Is the device capable of supporting digital pen
    <bool name="config_digitalPenCapable">true</bool> -->

    <!-- Flag specifying whether VoLTE, VT and WFC is available on device -->
    <bool name="config_device_volte_available">true</bool>
    <bool name="config_device_vt_available">true</bool>
    <bool name="config_device_wfc_ims_available">true</bool>

    <!-- Flag specifying whether VoLTE & VT should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>

    <!-- Flag specifying whether WFC over IMS should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_wfc_ims_available">true</bool>

    <string-array name="config_mobile_tcp_buffers">
        <item>"5gnr:2097152,6291456,16777216,512000,2097152,8388608"</item>
        <item>"lte:2097152,4194304,8388608,262144,524288,1048576"</item>
        <item>"lte_ca:4096,6291456,12582912,4096,1048576,2097152"</item>
        <item>"umts:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hspa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hsupa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hsdpa:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"hspap:4094,87380,1220608,4096,16384,1220608"</item>
        <item>"edge:4093,26280,35040,4096,16384,35040"</item>
        <item>"gprs:4092,8760,11680,4096,8760,11680"</item>
        <item>"evdo:4094,87380,524288,4096,16384,262144"</item>
    </string-array>


    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">4</integer>
    <!--  Whether Multiuser UI should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>


    <!-- Config determines whether to update phone object when voice registration
    state changes. Voice radio tech change will always trigger an update of
    phone object irrespective of this config -->
    <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>
    <!--  Define Google play service package for FRP-->
    <string name="config_persistentDataPackageName" translatable="false">com.google.android.gms</string>

    <!--  Define optional package verifier name -->
    <!-- <string name="config_optionalPackageVerifierName" translatable="false">seemp.service</string> -->

    <!-- Whether the Unprocessed audio source supports the required frequency range and level -->
    <bool name="config_supportAudioSourceUnprocessed">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
        autodetected from the Configuration. -->
    <!-- <bool name="config_showNavigationBar">true</bool> -->

    <!-- Boolean indicating if current platform supports HFP inband ringing -->
    <bool name="config_bluetooth_hfp_inband_ringing_support">true</bool>

    <!-- Enable overlay for all location components. -->
    <bool name="config_enableNetworkLocationOverlay" translatable="false">false</bool>
    <string name="config_networkLocationProviderPackageName" translatable="false">com.qualcomm.location</string>
    <!-- Enable doze mode -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>
    <bool name="config_dozeAfterScreenOffByDefault">true</bool>
    <!-- Screen brightness when dozing. -->
    <integer name="config_screenBrightnessDoze">17</integer>
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">false</bool>
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- ImsService package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_ims_package">org.codeaurora.ims</string>

    <!-- Flag specifying whether or not IMS will use the dynamic ImsResolver -->
    <bool name="config_dynamic_bind_ims">true</bool>

    <!-- The name of the package that will hold the dialer role by default. -->
    <!-- <string name="config_defaultDialer" translatable="false">org.codeaurora.dialer</string> -->

   <!-- Operating volatage for bluetooth controller. 0 by default-->
   <integer translatable="false" name="config_bluetooth_operating_voltage_mv">3300</integer>
   <!-- The duration (in milliseconds) for the outgoing sms authorization request to timeout.-->
   <integer name="config_sms_authorization_timeout_ms">15000</integer>
   <!-- Enable SMS authorization support -->
   <bool name="config_sms_authorization_enabled">true</bool>

   <!-- List of regexpressions describing the interface (if any) that represent tetherable
          Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
          should be empty.  An example would be "softap.*" -->
   <string-array translatable="false" name="config_tether_wifi_regexs">
       <item>"wlan\\d"</item>
   </string-array>

   <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
   on the headphone/microphone jack. When false use the older uevent framework -->
   <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- True if the firmware supports connected MAC randomization -->
    <bool name="config_wifi_connected_mac_randomization_supported">true</bool>

    <!-- True if the firmware supports p2p MAC randomization -->
    <bool name="config_wifi_p2p_mac_randomization_supported">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>8</item>
        <item>12</item>
        <item>20</item>
        <item>33</item>
        <item>55</item>
        <item>90</item>
        <item>148</item>
        <item>245</item>
        <item>403</item>
        <item>665</item>
        <item>1097</item>
        <item>1808</item>
        <item>2981</item>
        <item>5000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>10.27811</item>    <!--  0 - 1  -->
        <item>25.5265</item>    <!--  1 - 2  -->
        <item>32.9902384256</item>    <!--  2 - 3  -->
        <item>37.3278742039</item>    <!--  3 - 4  -->
        <item>40.2339130994</item>    <!--  4 - 8  -->
        <item>47.3775896947</item>    <!--  8 - 12  -->
        <item>52.0773980991</item>    <!--  12 - 20  -->
        <item>58.9500178659</item>    <!--  20 - 33  -->
        <item>67.0727661023</item>    <!--  33 - 55  -->
        <item>77.4795277377</item>    <!--  55 - 90  -->
        <item>90.1649821044</item>    <!--  90 - 148  -->
        <item>106.199488897</item>    <!--  148 - 245  -->
        <item>126.920893691</item>    <!--  245 - 403  -->
        <item>155.278937975</item>    <!--  403 - 665  -->
        <item>192.014446343</item>    <!--  665 - 1097  -->
        <item>238.225445161</item>    <!--  1097 - 1808  -->
        <item>292.196984602</item>    <!--  1808 - 2981  -->
        <item>355.964092728</item>    <!--  2981 - 5000  -->
        <item>431.503962344</item>    <!--  5000 - 10000  -->
        <item>546.6433233</item>    <!--  10000+  -->
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </integer-array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0</item>
        <item>450.0</item>
    </array>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">98</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Maximum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>28</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>28</item>
        <item>8</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>28</item>
    </integer-array>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
        autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
         @see https://www.w3.org/TR/SVG/paths.html#PathData
    -->
    <string translatable="false" name="config_mainBuiltInDisplayCutoutRectApproximation">
        M 276.86,88
        H -276.87
        V 0
        H 276.86
        Z
    </string>

    <string translatable="false" name="config_mainBuiltInDisplayCutout">
        M-303,0
        L303,0
        C297.996921,0 293.7782,0.963094935 290.461489,2.86688725
        C287.195202,4.73708323 284.618028,7.69916009 282.998891,11.4451514
        C282.001636,13.7688979 281.301317,16.4846017 280.925946,19.5138712
        L279.710193,29.4583864
        C277.878158,44.3359633 273.46895,56.5314329 266.605824,65.7032324
        C259.63625,75.0150165 250.375232,81.2583355 238.301733,84.7859506
        C231.018416,86.9193179 222.676217,88 213.50484,88
        L-213.50484,88
        C-228.497268,88 -241.14783,85.1107152 -251.097961,79.4161364
        C-261.188157,73.6431662 -268.516295,65.2216849 -273.496963,53.6701451
        C-276.499931,46.704505 -278.589682,38.5573937 -279.710193,29.4583864
        L-280.925946,19.5138712
        C-281.542227,14.5584118 -283.010096,10.4932553 -285.301539,7.43038941
        C-287.553765,4.41791805 -290.81445,2.21735811 -294.730634,1.06948333
        C-297.156539,0.363960295 -299.941007,0 -303,0
        Z
    </string>

    <!-- Smart replies in notifications: Whether we disable the feature unless the app targets P -->
    <bool name="config_smart_replies_in_notifications_requires_targeting_p">false</bool>

    <!-- Smart charge sysfs node and value for suspend/resume charging-->
    <string name="config_SmartChargingSysfsNode" translatable="false">/sys/class/power_supply/battery/input_suspend</string>
    <string name="config_SmartChargingSupspendValue" translatable="false">1</string>
    <string name="config_SmartChargingResumeValue" translatable="false">0</string>

    <!-- Wired/BT headset focus mode -->
    <bool name="config_deviceRingtoneFocusMode">true</bool>

    <!-- Whether device has a notch -->
    <bool name="config_haveNotch">true</bool>
    
    <!-- Whether we have a multi coloured battery LED or not -->
    <bool name="config_multiColorBatteryLed">false</bool>
    
</resources>
